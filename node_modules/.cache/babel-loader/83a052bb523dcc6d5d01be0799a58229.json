{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\src\\\\InputSample.js\";\nimport React, { useState, useRef } from 'react';\n\nfunction InputSample() {\n  const [inputs, setInputs] = useState({\n    name: '',\n    nickname: ''\n  });\n  const nameInput = useRef();\n  const {\n    name,\n    nickname\n  } = inputs; // 비구조화 할당을 통해 값 추출\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // 우선 e.target에서 name과 value를 추출\n\n    setInputs({ ...inputs,\n      // 기존의 input 객체를 복사한 뒤\n      [name]: value // name 키를 가진 값을 value로 설정\n\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nickname: ''\n    });\n    nameInput.current.focus();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    placeholder: \"\\uC774\\uB984\",\n    onChange: onChange,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nickname\",\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    onChange: onChange,\n    value: nickname,\n    ref: nameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"\\uCD08\\uAE30\\uD654\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"\\uAC12: \"), name, \" (\", nickname, \")\"));\n}\n\nexport default InputSample;","map":{"version":3,"sources":["C:/Users/bokjiho/Desktop/begin-react/src/InputSample.js"],"names":["React","useState","useRef","InputSample","inputs","setInputs","name","nickname","nameInput","onChange","e","value","target","onReset","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAIA,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,MAA3B,CAPmB,CAOgB;;AAEnC,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASL,MAAAA;AAAT,QAAkBI,CAAC,CAACE,MAA1B,CADoB,CACc;;AAClCP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AACK;AACX,OAACE,IAAD,GAAQK,KAFF,CAEQ;;AAFR,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,OAAO,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAT;AAIAC,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB;AACH,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,QAAQ,EAAEN,QAHd;AAII,IAAA,KAAK,EAAEH,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,QAAQ,EAAEG,QAHd;AAII,IAAA,KAAK,EAAEF,QAJX;AAKI,IAAA,GAAG,EAAEC,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAcI;AAAQ,IAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKP,IAFL,QAEaC,QAFb,MAfJ,CADJ;AAsBH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nfunction InputSample() {\r\n    const [inputs, setInputs] = useState({\r\n        name: '',\r\n        nickname: ''\r\n    });\r\n    const nameInput = useRef();\r\n\r\n    const { name, nickname } = inputs; // 비구조화 할당을 통해 값 추출\r\n    \r\n    const onChange = (e) => {\r\n        const { value, name } = e.target; // 우선 e.target에서 name과 value를 추출\r\n        setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사한 뒤\r\n            [name]: value // name 키를 가진 값을 value로 설정\r\n        });\r\n    };\r\n\r\n    const onReset = () => {\r\n        setInputs({\r\n            name: '',\r\n            nickname: '',\r\n        });\r\n        nameInput.current.focus();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                name=\"name\" \r\n                placeholder=\"이름\" \r\n                onChange={onChange} \r\n                value={name}\r\n            />\r\n            <input \r\n                name=\"nickname\" \r\n                placeholder=\"닉네임\" \r\n                onChange={onChange} \r\n                value={nickname}                 \r\n                ref={nameInput}\r\n            />\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값: </b>\r\n                {name} ({nickname})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;"]},"metadata":{},"sourceType":"module"}