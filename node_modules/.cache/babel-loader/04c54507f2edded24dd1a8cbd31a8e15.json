{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\src\\\\InputSample.js\";\nimport React, { useState } from 'react';\n\nfunction InputSample() {\n  const [inputs, setInputs] = useState({\n    name: '',\n    nickname: ''\n  });\n  const {\n    name,\n    nickname\n  } = inputs; // 비구조화 할당을 통해 값 추출\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // 우선 e.target에서 name과 value를 추출\n\n    setInputs({ ...inputs,\n      // 기존의 input 객체를 복사한 뒤\n      [name]: value // name 키를 가진 값을 value로 설정\n\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nickname: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    placeholder: \"\\uC774\\uB984\",\n    onChange: onChange,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nickname\",\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    onChange: onChange,\n    value: nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"\\uCD08\\uAE30\\uD654\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uAC12: \"), name, \" (\", nickname, \")\"));\n}\n\nexport default InputSample;","map":{"version":3,"sources":["C:/Users/bokjiho/Desktop/begin-react/src/InputSample.js"],"names":["React","useState","InputSample","inputs","setInputs","name","nickname","onChange","e","value","target","onReset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,MAA3B,CANmB,CAMgB;;AAEnC,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASJ,MAAAA;AAAT,QAAkBG,CAAC,CAACE,MAA1B,CADoB,CACc;;AAClCN,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AACK;AACX,OAACE,IAAD,GAAQI,KAFF,CAEQ;;AAFR,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,OAAO,GAAG,MAAM;AAClBP,IAAAA,SAAS,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAT;AAIH,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,cAA/B;AAAoC,IAAA,QAAQ,EAAEC,QAA9C;AAAwD,IAAA,KAAK,EAAEF,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,oBAAnC;AAAyC,IAAA,QAAQ,EAAEE,QAAnD;AAA6D,IAAA,KAAK,EAAED,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKN,IAFL,QAEaC,QAFb,MAJJ,CADJ;AAWH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction InputSample() {\r\n    const [inputs, setInputs] = useState({\r\n        name: '',\r\n        nickname: ''\r\n    });\r\n\r\n    const { name, nickname } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target; // 우선 e.target에서 name과 value를 추출\r\n        setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사한 뒤\r\n            [name]: value // name 키를 가진 값을 value로 설정\r\n        });\r\n    };\r\n\r\n    const onReset = () => {\r\n        setInputs({\r\n            name: '',\r\n            nickname: '',\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name} />\r\n            <input name=\"nickname\" placeholder=\"닉네임\" onChange={onChange} value={nickname} />\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값: </b>\r\n                {name} ({nickname})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;"]},"metadata":{},"sourceType":"module"}