{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\bokjiho\\\\Desktop\\\\begin-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import'./App.css';import UserList from'./UserList';import CreateUser from'./CreateUser';function App(){var _useState=useState({username:'',email:''}),_useState2=_slicedToArray(_useState,2),inputs=_useState2[0],setInputs=_useState2[1];var username=inputs.username,email=inputs.email;var onChange=function onChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setInputs(_objectSpread(_objectSpread({},inputs),{},_defineProperty({},name,value)));};var _useState3=useState([{id:1,username:'bokjiho',email:'bok.jiho@gmail.com',active:true},{id:2,username:'jiminbok',email:'jiminbok@gmail.com',active:false},{id:3,username:'ockmilee',email:'leeockmi121@gmail.com',active:false}]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var nextId=useRef(4);var onCreate=function onCreate(){var user={id:nextId.current,username:username,email:email};setUsers([].concat(_toConsumableArray(users),[user]));setInputs({username:'',email:''});nextId.current+=1;};var onRemove=function onRemove(id){// user.id가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듦\n// = user.id가 id인 것을 제거함\nsetUsers(users.filter(function(user){return user.id!==id;}));};var onToggle=function onToggle(id){setUsers(users.map(function(user){return user.id===id?_objectSpread(_objectSpread({},user),{},{active:!user.active}):user;}));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CreateUser,{username:username,email:email,onChange:onChange,onCreate:onCreate}),/*#__PURE__*/React.createElement(UserList,{users:users,onRemove:onRemove,onToggle:onToggle}));}/*\nfunction App() {\n  return (\n    <Wrapper>\n      <Hello name=\"react\" color=\"red\" isSpecial={true}/>\n      <Hello color=\"pink\"/>\n    </Wrapper>\n  )\n}\n*/ // function App() {\n//   const name = 'react';\n//   const style = {\n//     backgroundColor: 'black',\n//     color: 'aqua',\n//     fontSize: 24, // 기본 단위 px\n//     padding: '1rem', // 다른 단위 사용 시 문자열로 설정\n//   }\n//   return (\n//     <>\n//     {/* 우와앙 주석이다 */}\n//     /* 주석이 없으면 화면에 나타남 */\n//       <Hello name=\"react\" color=\"red\"/>\n//       <div style={style}>{name}</div>\n//       <div className=\"gray-box\"></div>\n//       <Hello />\n//     </>\n//   );\n// }\nexport default App;","map":{"version":3,"sources":["C:/Users/bokjiho/Desktop/begin-react/src/App.js"],"names":["React","useRef","useState","UserList","CreateUser","App","username","email","inputs","setInputs","onChange","e","target","name","value","id","active","users","setUsers","nextId","onCreate","user","current","onRemove","filter","onToggle","map"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\n\nfunction App() {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: '',\n  });\n\n  const { username, email } = inputs;\n  const onChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([\n    {\n        id: 1,\n        username: 'bokjiho',\n        email: 'bok.jiho@gmail.com',\n        active: true,\n    },\n    {\n        id: 2,\n        username: 'jiminbok',\n        email: 'jiminbok@gmail.com',\n        active: false,\n    },\n    {\n        id: 3,\n        username: 'ockmilee',\n        email: 'leeockmi121@gmail.com',\n        active: false,\n    },\n  ]);\n  \n  const nextId = useRef(4);\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n\n    setInputs({\n      username: '',\n      email: '',\n    });\n\n    nextId.current += 1;\n  };\n  \n  const onRemove = id => {\n    // user.id가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듦\n    // = user.id가 id인 것을 제거함\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const onToggle = id => {\n    setUsers(\n      users.map(user =>\n        user.id === id ? { ...user, active: !user.active } : user\n      )\n    );\n  };\n\n  return(\n    <>\n     <CreateUser \n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate} \n     />\n    <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n    </>\n  );\n}\n\n\n/*\nfunction App() {\n  return (\n    <Wrapper>\n      <Hello name=\"react\" color=\"red\" isSpecial={true}/>\n      <Hello color=\"pink\"/>\n    </Wrapper>\n  )\n}\n*/\n\n// function App() {\n//   const name = 'react';\n//   const style = {\n//     backgroundColor: 'black',\n//     color: 'aqua',\n//     fontSize: 24, // 기본 단위 px\n//     padding: '1rem', // 다른 단위 사용 시 문자열로 설정\n//   }\n//   return (\n//     <>\n//     {/* 우와앙 주석이다 */}\n//     /* 주석이 없으면 화면에 나타남 */\n//       <Hello name=\"react\" color=\"red\"/>\n//       <div style={style}>{name}</div>\n//       <div className=\"gray-box\"></div>\n//       <Hello />\n//     </>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}